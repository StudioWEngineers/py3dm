name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build wheels on ${{ matrix.os }} with Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-15, windows-latest]
        python: [3.12, 3.13]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build

      - name: Build wheel and sdist
        run: |
          python -m build --wheel --sdist --outdir dist

      - name: Verify wheel files
        run: |
          echo "Found the following files in dist/:"
          find dist -type f
          ls dist/*.whl || (echo "No wheels found to upload!" && exit 1)

      - name: Upload wheels to GitHub (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: py3dm-wheels-${{ matrix.os }}-py${{ matrix.python }}
          path: dist/*.whl

  publish:
    name: Publish wheels to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten dist folder
        run: |
          mkdir -p flat_dist
          find dist -type f \( -name '*.whl' -o -name '*.tar.gz' \) -exec cp {} flat_dist/ \;
          ls flat_dist

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
        run: |
          python -m twine upload dist/*

