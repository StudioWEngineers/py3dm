name: Build and Publish Wheels

on:
  push:

jobs:
  build:
    name: Build wheels with cibuildwheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-15, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python (for host environment)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install cibuildwheel
        run: python -m pip install --upgrade cibuildwheel

      - name: Build wheels using cibuildwheel
        env:
          CIBW_BUILD: "cp312-* cp313-*"
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"
        run: python -m cibuildwheel --output-dir dist

      - name: Upload wheels to GitHub (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: py3dm-wheels-${{ matrix.os }}
          path: dist/*.whl

  publish:
    name: Publish wheels to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten dist folder
        run: |
          mkdir -p dist
          find artifacts -type f -name '*.whl' -exec cp {} dist/ \;
          ls dist/

      - name: Install Twine
        run: python -m pip install --upgrade twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          python -m twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*
